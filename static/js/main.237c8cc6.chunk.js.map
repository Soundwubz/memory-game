{"version":3,"sources":["components/Header.jsx","components/Clicky.jsx","components/Game.jsx","App.jsx","index.js"],"names":["Header","className","this","props","score","topScore","React","Component","Clicky","clickyStyle","backgroundImage","name","backgroundSize","backgroundPosition","height","width","border","style","onClick","Game","state","characters","imgUrl","clickedCharacters","shuffleArray","array","sort","Math","random","shuffleCharacters","clicked","index","findIndex","character","alert","setState","callback","char","newClicked","concat","map","key","App","clickyCallback","truthy","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAuBeA,G,6KAlBP,OACI,yBAAKC,UAAU,0BACX,yBAAKA,UAAU,eACf,yBAAKA,UAAU,SACX,wBAAIA,UAAU,wBAAd,gBAEJ,yBAAKA,UAAU,SACX,wBAAIA,UAAU,yBAAd,UACW,0BAAMA,UAAU,SAASC,KAAKC,MAAMC,MAApC,KADX,gBAEiB,0BAAMH,UAAU,YAAYC,KAAKC,MAAME,kB,GAZvDC,IAAMC,Y,OCgBZC,MAhBf,SAAgBL,GAEZ,IAAMM,EAAc,CAChBC,gBAAiB,WAAaP,EAAMQ,KAAO,QAC3CC,eAAgB,QAChBC,mBAAoB,SACpBC,OAAQ,QACRC,MAAO,QACPC,OAAQ,mBAGZ,OACI,yBAAKC,MAAOR,EAAaS,QAASf,EAAMe,QAASjB,UAAU,YCgEpDkB,E,4MAzEZC,MAAQ,CACHC,WAAc,CACV,CACIV,KAAM,SACNW,OAAQ,kBAEZ,CACIX,KAAM,OACNW,OAAQ,gBAEZ,CACIX,KAAM,MACNW,OAAQ,eAEZ,CACIX,KAAM,MACNW,OAAQ,eAEZ,CACIX,KAAM,eACNW,OAAQ,wBAEZ,CACIX,KAAM,WACNW,OAAQ,oBAEZ,CACIX,KAAM,QACNW,OAAQ,iBAEZ,CACIX,KAAM,OACNW,OAAQ,iBAGhBC,kBAAmB,I,EAGvBC,aAAe,SAACC,GACZA,EAAMC,MAAK,kBAAMC,KAAKC,SAAW,O,EAGrCC,kB,YAAwB,EAAKT,MAAMC,Y,EAEnCS,QAAU,SAAAnB,GACN,IAAIoB,EAAQ,EAAKX,MAAMC,WAAWW,WAAU,SAAAC,GAAS,OAAIA,EAAUtB,OAASA,KAE5E,IAAqB,IADF,EAAKS,MAAMG,kBAAkBS,WAAU,SAAAC,GAAS,OAAIA,EAAUtB,OAASA,KAEtFuB,MAAM,cACN,EAAKC,SAAS,CAACZ,kBAAmB,KAClC,EAAKpB,MAAMiC,UAAS,OACjB,CACH,IAAIC,EAAO,EAAKjB,MAAMC,WAAWU,GAC7BO,EAAa,EAAKlB,MAAMG,kBAAkBgB,OAAOF,GACrD,EAAKF,SAAS,CAACZ,kBAAmBe,IAClC,EAAKnC,MAAMiC,UAAS,K,uDAKlB,IAAD,OAEL,OADAlC,KAAKsB,aAAatB,KAAK2B,mBAEnB,yBAAK5B,UAAU,kBACVC,KAAK2B,kBAAkBW,KAAI,SAAAP,GACxB,OAAO,kBAAC,EAAD,CAAQf,QAAS,kBAAM,EAAKY,QAAQG,EAAUtB,OAAOA,KAAMsB,EAAUtB,KAAMW,OAAQW,EAAUX,OAAQmB,IAAKR,EAAUtB,e,GAnE5HL,IAAMC,WCsCVmC,E,4MAnCbtB,MAAQ,CACNhB,MAAO,EACPC,SAAU,G,EAGZsC,eAAiB,SAACC,GACbA,EACD,EAAKT,SAAS,CACZ/B,MAAO,EAAKgB,MAAMhB,MAAQ,EAC1BC,SAAU,EAAKe,MAAMhB,MAAQ,EAAI,EAAKgB,MAAMf,SAAW,EAAKe,MAAMf,SAAU,EAAI,EAAKe,MAAMf,WAG7F,EAAK8B,SAAS,CACZ/B,MAAO,EACPC,SAAU,EAAKe,MAAMf,Y,uDAMzB,OACE,6BACE,kBAAC,EAAD,CAAQD,MAAOF,KAAKkB,MAAMhB,MAAOC,SAAUH,KAAKkB,MAAMf,WACtD,yBAAKJ,UAAU,aACb,uGAGF,kBAAC,EAAD,CAAMmC,SAAUlC,KAAKyC,sB,GA5BXrC,IAAMC,WCAxBsC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.237c8cc6.chunk.js","sourcesContent":["import React from 'react';\n\nclass Header extends React.Component {\n    \n    render() {\n        return (\n            <div className=\"container-fluid header\">\n                <div className=\"row bg-dark\">\n                <div className=\"col-6\">\n                    <h1 className=\"text-light display-4\">Memory Game</h1>\n                </div>\n                <div className=\"col-6\">\n                    <h3 className=\"text-light text-right\">\n                        Score: <span className=\"score\">{this.props.score} </span> \n                        | Top Score: <span className=\"topScore\">{this.props.topScore}</span>\n                    </h3>\n                </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Header;","import React from 'react';\n\nfunction Clicky(props) {\n\n    const clickyStyle = {\n        backgroundImage: 'url(img/' + props.name + '.jpg)',\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        height: '100px',\n        width: '100px',\n        border: '1px solid black'\n    };\n\n    return(\n        <div style={clickyStyle} onClick={props.onClick} className=\"clicky\"></div>\n    )\n}\n\nexport default Clicky;","import React from 'react';\nimport Clicky from './Clicky';\n\nclass Game extends React.Component {\n\n   state = {\n        characters :  [\n            {\n                name: \"chewie\",\n                imgUrl: \"img/chewie.jpg\"\n            },\n            {\n                name: \"kylo\",\n                imgUrl: \"img/kylo.jpg\"\n            },\n            {\n                name: \"rex\",\n                imgUrl: \"img/rex.jpg\"\n            },\n            {\n                name: \"rey\",\n                imgUrl: \"img/rey.jpg\"\n            },\n            {\n                name: \"stormtrooper\",\n                imgUrl: \"img/stormtrooper.jpg\"\n            },\n            {\n                name: \"threepio\",\n                imgUrl: \"img/threepio.jpg\"\n            },\n            {\n                name: \"vader\",\n                imgUrl: \"img/vader.jpg\"\n            },\n            {\n                name: \"yoda\",\n                imgUrl: \"img/yoda.jpg\"\n            }\n        ],\n        clickedCharacters: []\n    }\n\n    shuffleArray = (array) => {\n        array.sort(() => Math.random() - 0.5);\n    };\n\n    shuffleCharacters = [...this.state.characters];\n\n    clicked = name => {\n        let index = this.state.characters.findIndex(character => character.name === name);\n        let clickedIndex = this.state.clickedCharacters.findIndex(character => character.name === name);\n        if(clickedIndex !== -1) {\n            alert('Game Over!');\n            this.setState({clickedCharacters: []});\n            this.props.callback(false);\n        } else {\n            let char = this.state.characters[index];\n            let newClicked = this.state.clickedCharacters.concat(char);\n            this.setState({clickedCharacters: newClicked});\n            this.props.callback(true);\n        }\n        \n    }\n\n    render() {\n        this.shuffleArray(this.shuffleCharacters);\n        return (\n            <div className=\"container game\">\n                {this.shuffleCharacters.map(character => {\n                    return <Clicky onClick={() => this.clicked(character.name)} name={character.name} imgUrl={character.imgUrl} key={character.name}></Clicky>\n                })}\n            </div>\n        )\n    }\n    \n}\n\nexport default Game;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Game from './components/Game';\n\nclass App extends React.Component {\n  state = {\n    score: 0,\n    topScore: 0\n  }\n\n  clickyCallback = (truthy) => {\n    if(truthy){\n      this.setState({\n        score: this.state.score + 1,\n        topScore: this.state.score + 1 > this.state.topScore ? this.state.topScore +1 : this.state.topScore\n      });\n    } else {\n      this.setState({\n        score: 0,\n        topScore: this.state.topScore\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Header score={this.state.score} topScore={this.state.topScore}></Header>\n        <div className=\"jumbotron\">\n          <h1>Click on an image to earn points, but don't click the same image twice</h1>\n        </div>\n        {/* Game Container */}\n        <Game callback={this.clickyCallback}></Game>\n      </div>\n      \n    );\n  }\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}